plugins {
    id 'java'
    id 'pmd'
    id 'jacoco'
    id 'war'
}

group = 'code'
version = 'unspecified'
sourceCompatibility = '21'

repositories {
    mavenCentral()
}

ext {
    lombokVersion = '1.18.30'
    springVersion = '6.1.1'
    junitVersion = '5.10.0'
    mockitoVersion = '5.8.0'
    powermockVersion = '2.0.9'
    postgreSQLDriverVersion = '42.3.8'
    logbackVersion = '1.4.12'
    plantUMLVersion = '2.3.0'
    jakartaPersistenceApiVersion = '3.1.0'
    hibernateVersion = '6.4.1.Final'
    hikariVersion = '5.0.1'
    ehcacheVersion = '3.10.8'
    jaxbApiVersion = '2.3.1'
    springDataJPAVersion = '3.2.1'
    flywayVersion = '10.5.0'
    h2Version = '2.2.224'
    testcontainersVersion = '1.19.3'
    thymeleafVersion = '3.1.2.RELEASE'
}

dependencies {
    implementation "org.springframework:spring-core:$springVersion"
    implementation "org.springframework:spring-beans:$springVersion"
    implementation "org.springframework:spring-context:$springVersion"
    implementation "org.springframework:spring-context-support:$springVersion"
    implementation "org.springframework:spring-expression:$springVersion"
    testImplementation "org.springframework:spring-test:$springVersion"

    implementation "org.springframework:spring-webmvc:$springVersion"

    implementation "org.springframework:spring-jdbc:$springVersion"
    implementation "org.springframework:spring-tx:$springVersion"
    implementation "org.springframework:spring-orm:$springVersion"
    implementation "org.springframework.data:spring-data-jpa:$springDataJPAVersion"
    implementation "org.postgresql:postgresql:$postgreSQLDriverVersion"

    implementation "jakarta.persistence:jakarta.persistence-api:$jakartaPersistenceApiVersion"
    implementation "org.hibernate.orm:hibernate-core:$hibernateVersion"

    // hikari flyway
    implementation "org.hibernate.orm:hibernate-hikaricp:$hibernateVersion"
    implementation "com.zaxxer:HikariCP:$hikariVersion"
    implementation "org.flywaydb:flyway-core:$flywayVersion"
    runtimeOnly "org.flywaydb:flyway-database-postgresql:$flywayVersion"

    // hibernate cache
    implementation "org.hibernate.orm:hibernate-jcache:$hibernateVersion"
    implementation "org.ehcache:ehcache:$ehcacheVersion"
    implementation "javax.xml.bind:jaxb-api:$jaxbApiVersion"
    implementation "com.sun.xml.bind:jaxb-impl:$jaxbApiVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    implementation "ch.qos.logback:logback-classic:$logbackVersion"
    implementation "org.slf4j:slf4j-api:1.7.36"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation "org.powermock:powermock-api-mockito2:$powermockVersion"
    testImplementation "org.testcontainers:junit-jupiter:$testcontainersVersion"
    testImplementation "org.testcontainers:postgresql:$testcontainersVersion"

    implementation "de.elnarion.util:plantuml-generator-util:$plantUMLVersion"

    compileOnly 'jakarta.platform:jakarta.jakartaee-api:10.0.0'
    compileOnly 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:3.1.1'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.0'

    implementation "org.thymeleaf:thymeleaf-spring6:$thymeleafVersion"
    implementation "org.thymeleaf:thymeleaf:$thymeleafVersion"

}

war {
    archiveFileName = 'sample-web-mvc-app.war'
}

//jar {
//    manifest {
//        attributes 'MainRunner-Class': 'code.Main'
//    }
//    from {
//        configurations.runtimeClasspath.collect {
//            it.directory ? it : zipTree(it)
//        }
//    }
//}

// To turn on only consoleOutput, comment rest, priority doesn't seem to work, it passes no matter what
pmd {
    consoleOutput = false
    toolVersion = "6.21.0"
    rulesMinimumPriority = 5
    ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}
jacoco {
    toolVersion = "0.8.9"
}
jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification
compileJava.options.encoding = 'UTF-8'